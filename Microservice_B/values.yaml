replicaCount: 1                                                               #REQ - Number of replica you want to run of this deployment
image:                                                                        #REQ - Image config for the deployment
  repository: <PIPELINE>                                                      #REQ - Repository of the docker image
  tag: <PIPELINE>                                                             #REQ - Tag of the docker image
  pullPolicy: IfNotPresent                                                    #REQ - When should the kubelet attempts to pull (download) the specified image..

service:
  name: microservice-b                                                        #REQ - Name of the service
  type: ClusterIP                                                             #REQ - Kind of service you want to make it.
  externalPort: 80                                                            #REQ - The outbound port of the service
  internalPort: 8080                                                          #REQ - The port on the pod.

resources:                                                                    #REQ - Object to define required resources for this deployment
  limits:                                                                     #REQ - The limit of resources that can be used by this deployment
    cpu: 2
    memory: 4Gi
  requests:                                                                   #REQ - The reserved resources by this deployment
    cpu: 100m
    memory: 2Gi

livenessProbe:                                                                #REQ - Configuration for the probe to check if a pod is still healthy running
  probePath:  /health                                                          #REQ - Path to perform http calls and verify server liveness
  initialDelaySeconds: 500                                                     #REQ - Number of seconds after the container has started before liveness probes are initiated
  periodSeconds: 10                                                            #REQ - How often (in seconds) to perform the probe.
  successThreshold: 1                                                          #REQ - Minimum consecutive successes for the probe to be considered successful after having failed
  timeoutSeconds: 1                                                            #REQ - Number of seconds after which the probe times out.
  failureThreshold: 3                                                          #REQ - Number of retries before pod is considered dead.
readinessProbe:                                                               #REQ - Configuration for the probe to check if a pod is ready to receive requests
  probePath:  /health                                                          #REQ - Path to perform http calls and verify server readiness
  initialDelaySeconds: 240                                                     #REQ - Number of seconds after the container has started before readiness probes are initiated
  periodSeconds: 10                                                            #REQ - How often (in seconds) to perform the probe.
  successThreshold: 1                                                          #REQ - Minimum consecutive successes for the probe to be considered successful after having failed
  timeoutSeconds: 1                                                            #REQ - Number of seconds after which the probe times out.
  failureThreshold: 3                                                          #REQ - Number of retries before pod is considered not ready.
terminationGracePeriodSeconds: 60                                             #REQ - A grace period before killing the pod. This to make sure all processes can be killed securely.

config:
  ENVIRONMENT_VARIABLE_C: env_C_value
  ENVIRONMENT_VARIABLE_D: env_D_value